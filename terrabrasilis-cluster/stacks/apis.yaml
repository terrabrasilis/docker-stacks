# Use in Swarm (apis)
version: '3.4'
services:

  # Business API as a Service
  business_api:
    hostname: business_api
    image: terrabrasilis/business-api:v1.2.5
    networks:
      - proxy
      - backend
    ports:
      - "8090"
    environment:   
      - "SPRING_PROFILES_ACTIVE=docker"
    depends_on:
      - mongodb
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
    healthcheck:
      test: ["CMD-SHELL", "httpcode=`curl -o /dev/null --max-time 15 --silent --head --write-out \"%{http_code}\" \"http://localhost:8090/api/v1/layer/health\"`; if [ ! $httpcode = \"200\" ]; then exit 1; fi"]
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 20s

  # File delivery service API with authentication
  file_delivery_api:
    image: terrabrasilis/file-delivery:v1.0.6
    hostname: file.delivery.auth
    volumes:
      - /data/deter-auth/generated-files:/data/files:ro
      - /data/deter-auth/logs:/logs
    environment:
      OAUTH_API_URL: "https://terrabrasilis.dpi.inpe.br/oauth-api/"
      NODE_TLS_REJECT_UNAUTHORIZED: "0"
    networks:
      - proxy
    ports:
      - "9000"
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
    healthcheck:
      test: ["CMD-SHELL", "httpcode=`curl -o /dev/null --max-time 15 --silent --head --write-out \"%{http_code}\" \"http://localhost:9000/health\"`; if [ ! $httpcode = \"200\" ]; then exit 1; fi"]
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 20s
        
  # Middleware authentication service
  oauth_api:
    image: terrabrasilis/terrabrasilis-oauth-api:v2.0.2
    hostname: oauth.api
    volumes:
      - /data/oauth-api/logs:/logs
      - /data/oauth-api/config:/data/oauth-api/config
    secrets:
      - jwt.public.key      
    environment:      
      JWT_PUBLIC_KEY: /run/secrets/jwt.public.key
      OAUTH_CONFIG_FILE: /data/oauth-api/config/oauth_config.json
      GET_CAPABILITIES_CONFIG_FILE: /data/oauth-api/config/getcapabilities_config.json
      OPENSSL_CONF: /dev/null
      PROXY_CONFIG_FILE: /data/oauth-api/config/proxy_config.json
    networks:
      - proxy
    ports:
      - "9000"
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
    healthcheck:
      test: ["CMD-SHELL", "httpcode=`curl -o /dev/null --max-time 15 --silent --head --write-out \"%{http_code}\" \"http://localhost:9000/health\"`; if [ ! $httpcode = \"200\" ]; then exit 1; fi"]
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 20s

secrets:
  jwt.public.key:
    external: true

networks:
  proxy:
    external: true
  backend:
    external: true
