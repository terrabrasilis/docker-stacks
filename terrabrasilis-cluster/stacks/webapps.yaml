# Used for deploy webapps stack
version: '3.4'

services:

  webmap:
    image: terrabrasilis/webmap:prod_v2.6.5
    networks:
      - proxy
    ports:
      - "80"
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
    environment:
      - "PUBLIC_PROXY=/oauth-api/publicproxy?url="
      - "AUTHENTICATION_RESOURCE_ROLE=terrabrasilis-user"
      - "AUTHENTICATION_CLIENT_ID=terrabrasilis-apps"
    healthcheck:
      test: ["CMD-SHELL", "httpcode=`curl -s -o /dev/null --head -w \"%{http_code}\" -X GET \"http://localhost\"`; if [ ! $httpcode = \"200\" ]; then exit 1; fi"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 10s

  deforestation-dashboard:
    image: terrabrasilis/deforestation-dashboard:prod_v3.4.6
    networks:
      - proxy
    ports:
      - "80"
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
    healthcheck:
      test: ["CMD-SHELL", "httpcode=`curl -s -o /dev/null --head -w \"%{http_code}\" -X GET \"http://localhost\"`; if [ ! $httpcode = \"200\" ]; then exit 1; fi"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 10s

  focuses-of-fires:
    image: terrabrasilis/focuses-of-fires-dashboard:v1.4.1
    networks:
      - proxy
    ports:
      - "80"
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
    healthcheck:
      test: ["CMD-SHELL", "httpcode=`curl -s -o /dev/null --head -w \"%{http_code}\" -X GET \"http://localhost\"`; if [ ! $httpcode = \"200\" ]; then exit 1; fi"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 10s

  cerrado-alert-daily:
    image: terrabrasilis/cerrado-alert-daily:v2.7.9
    networks:
      - proxy
    ports:
      - "80"
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
    healthcheck:
      test: ["CMD-SHELL", "httpcode=`curl -s -o /dev/null --head -w \"%{http_code}\" -X GET \"http://localhost\"`; if [ ! $httpcode = \"200\" ]; then exit 1; fi"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 10s

  cerrado-alert-aggregated:
    image: terrabrasilis/cerrado-alert-aggregated:v2.7.9
    networks:
      - proxy
    ports:
      - "80"
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
    healthcheck:
      test: ["CMD-SHELL", "httpcode=`curl -s -o /dev/null --head -w \"%{http_code}\" -X GET \"http://localhost\"`; if [ ! $httpcode = \"200\" ]; then exit 1; fi"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 10s

  amazon-alert-aggregated:
    image: terrabrasilis/amazon-alert-aggregated:v2.13.2
    networks:
      - proxy
    ports:
      - "80"
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
    healthcheck:
      test: ["CMD-SHELL", "httpcode=`curl -s -o /dev/null --head -w \"%{http_code}\" -X GET \"http://localhost\"`; if [ ! $httpcode = \"200\" ]; then exit 1; fi"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 10s

  amazon-alert-daily:
    image: terrabrasilis/amazon-alert-daily:v2.13.3
    networks:
      - proxy
    ports:
      - "80"
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
    healthcheck:
      test: ["CMD-SHELL", "httpcode=`curl -s -o /dev/null --head -w \"%{http_code}\" -X GET \"http://localhost\"`; if [ ! $httpcode = \"200\" ]; then exit 1; fi"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 10s

  deter_pantanal_report:
    image: terrabrasilis/deter-pantanal-app:v0.1.1
    ports:
      - "80"
    volumes:
      - /data/deter-app/pantanal:/var/www/html/config
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
    networks: 
      - proxy

  deter_nf_report:
    image: terrabrasilis/deter-nf-app:v0.1.1
    ports:
      - "80"
    volumes:
      - /data/deter-app/nf:/var/www/html/config
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
    networks: 
      - proxy

  cerrado-nb-alert-daily:
    image: terrabrasilis/cerrado-alert-daily:v2.12.2
    networks:
      - proxy
    ports:
      - "80"
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
        
  cerrado-nb-alert-aggregated:
    image: terrabrasilis/cerrado-alert-aggregated:v2.12.2
    networks:
      - proxy
    ports:
      - "80"
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s

  ams-webapp:
    image: terrabrasilis/ams-webapp:v2.2.5
    hostname: ams.webapp
    entrypoint: /docker-entrypoint.sh
    networks:
      - proxy
    ports:
      - 7000
    environment:
      - "SCRIPT_NAME=/ams"
      - "GEOSERVER_URL=https://terrabrasilis.dpi.inpe.br/geoserver"
      - "SERVER_NAME=terrabrasilis.dpi.inpe.br"
      - "APPLICATION_ROOT=/ams/"
      - "DB_AMAZON_URL=/run/secrets/ams.database.url.amz.v2"
      - "DB_CERRADO_URL=/run/secrets/ams.database.url.cer.v2"
    secrets:
      - ams.database.url.amz.v2
      - ams.database.url.cer.v2
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s

secrets:
  ams.database.url.amz.v2:
    external: true
  ams.database.url.cer.v2:
    external: true

networks:
  proxy:
    external: true
