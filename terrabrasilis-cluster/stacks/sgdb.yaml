version: '3.4'
services:

  # The instance of MongoDB to store the BusinessAPI documents
  mongodb:
    image: mongo:4.4
    hostname: "mongo.db"
    networks:
      - backend
    environment:
      MONGO_DATA_DIR: /data/db
      MONGO_LOG_DIR: /dev/null
    volumes:
      - /data/mongodb:/data/db
      - /data/backup/mongodb:/data/backup
    ports:
      - "27017"
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s

  # The instance of MongoDB to store the Oauth Service data
  mongo-oauth:
    image: mongo:4.2.7
    hostname: mongo-oauth
    ports:
      - "30036:27017"
    volumes:
      - /data/oauth-service/db:/data/db
    secrets:
      - mongo.user.oauth
      - mongo.pass.oauth
    environment:
      MONGO_INITDB_ROOT_USERNAME_FILE: /run/secrets/mongo.user.oauth
      MONGO_INITDB_ROOT_PASSWORD_FILE: /run/secrets/mongo.pass.oauth
    networks:
      - backend
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  # The instance of RedisDB to store the Oauth Service data on memory
  redis-oauth:
    image: bitnami/redis:7.0.2
    hostname: redis-oauth
    volumes:
      # need UID:GID to write on volume: chown -R 1001:1001 /data/oauth-service/redisdata/
      - /data/oauth-service/redisdata:/bitnami/redis/data
    networks:
      - backend
    secrets:
      - redis.pass.oauth
    environment:
      REDIS_PASSWORD_FILE: /run/secrets/redis.pass.oauth
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  db_mysql:
    image: mysql:5.7
    volumes:
      - /data/mysql:/var/lib/mysql
    secrets:
      - server.user.mysql
      - server.pass.mysql
      - server.rootpass.mysql
      - server.dbname.mysql
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/server.rootpass.mysql
      MYSQL_DATABASE_FILE: /run/secrets/server.dbname.mysql
      MYSQL_USER_FILE: /run/secrets/server.user.mysql
      MYSQL_PASSWORD_FILE: /run/secrets/server.pass.mysql
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks: 
      - backend

secrets:
  mongo.user.oauth:
    external: true
  mongo.pass.oauth:
    external: true
  redis.pass.oauth:
    external: true
  server.user.mysql:
    external: true
  server.pass.mysql:
    external: true
  server.dbname.mysql:
    external: true
  server.rootpass.mysql:
    external: true

networks: 
  backend:
    external: true
