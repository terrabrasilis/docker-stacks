[
    {
        "type": 2,
        "name": "proxy-ogc",
        "title": "The proxy to bypass CORS",
        "description": "The http used to bypass CORS when webmap calls GeoServer capabilities",
        "note": "The PROXY Server will be deployed globally inside the cluster and available on port 80.",
        "categories": ["service"],
        "platform": "linux",
        "logo": "https://raw.githubusercontent.com/terrabrasilis/docker-stacks/master/icons/backend.png",
        "repository": {
            "url": "https://github.com/Terrabrasilis/docker-stacks",
            "stackfile": "services/proxy-ogc.yaml"
        }
    },
    {
        "type": 2,
        "name": "nginx-manager",
        "title": "NGINX Manager",
        "description": "The http entry point for all resources in our Swarm cluster",
        "note": "The Nginx Server will be deployed globally inside the cluster and available on port 80.",
        "categories": ["webserver"],
        "platform": "linux",
        "logo": "https://raw.githubusercontent.com/terrabrasilis/docker-stacks/master/icons/backend.png",
        "repository": {
            "url": "https://github.com/Terrabrasilis/docker-stacks",
            "stackfile": "nginx-manager/manager.yaml"
        }
    },
    {
        "type": 2,
        "name": "business-api",
        "title": "Business API as a Service",
        "description": "Using this API you can request for all data like Visions, Layers, Tools, Data Sources, Downloads and Subdomains.",
        "note": "This service is mandatory to configure the TreeView of the WebApp and the Download list of WebSite. This stack includes an instance of API and a MongoDB to store JSON documents.",
        "categories": ["API","services"],
        "platform": "linux",
        "logo": "http://terrabrasilis.dpi.inpe.br/wp-content/uploads/2019/03/geoespaciais1.png",
        "repository": {
            "url": "https://github.com/Terrabrasilis/docker-stacks",
            "stackfile": "api/business-api.yaml"
        }
    },
    {
        "type": 2,
        "name": "business-api-homologation",
        "title": "Homologation of Business API",
        "description": "Using this API you can request for all data like Visions, Layers, Tools, Data Sources, Downloads and Subdomains.",
        "note": "This service is mandatory to configure the TreeView of the WebApp and the Download list of WebSite. This stack includes an instance of API and a MongoDB to store JSON documents.",
        "categories": ["API","services","homologation"],
        "platform": "linux",
        "logo": "http://terrabrasilis.dpi.inpe.br/wp-content/uploads/2019/03/geoespaciais1.png",
        "repository": {
            "url": "https://github.com/Terrabrasilis/docker-stacks",
            "stackfile": "api/business-api-homologation.yaml"
        }
    },
    {
        "type": 2,
        "name": "geoserver-cluster",
        "title": "GeoServer cluster",
        "description": "The stack of the cluster GeoServer Application.",
        "note": "This service is needed to provide the OWS services. It's includes some instances of GeoServer and one instance of ActiveMQ as a Broker.",
        "categories": ["OWS","API","services"],
        "platform": "linux",
        "logo": "http://terrabrasilis.dpi.inpe.br/wp-content/uploads/2019/03/geoespaciais1.png",
        "repository": {
            "url": "https://github.com/Terrabrasilis/docker-stacks",
            "stackfile": "applications/geoserver-cluster-mqueue.yaml"
        }
    },
    {
        "type": 2,
        "name": "geoserver-single",
        "title": "GeoServer single instance",
        "description": "The single instance of GeoServer Application.",
        "note": "This service is needed to provide the OWS services. It's includes an instance of Nginx and one GeoServer.",
        "categories": ["OWS","API","services"],
        "platform": "linux",
        "logo": "http://terrabrasilis.dpi.inpe.br/wp-content/uploads/2019/03/geoespaciais1.png",
        "repository": {
            "url": "https://github.com/Terrabrasilis/docker-stacks",
            "stackfile": "applications/geoserver-single.yaml"
        }
    },
    {
        "type": 2,
        "name": "geoserver-redd-pac",
        "title": "Legacy GeoServer instance for REDD-PAC",
        "description": "The instance of GeoServer Application.",
        "note": "This service is needed to provide the OWS services of REDD-PAC database.",
        "categories": ["OWS","API","services", "legacy"],
        "platform": "linux",
        "logo": "http://terrabrasilis.dpi.inpe.br/wp-content/uploads/2019/03/geoespaciais1.png",
        "repository": {
            "url": "https://github.com/Terrabrasilis/docker-stacks",
            "stackfile": "applications/geoserver-legacy.yaml"
        }
    },
    {
        "type": 2,
        "name": "geonetwork",
        "title": "GeoNetwork instance",
        "description": "The custom instance of GeoNetwork.",
        "note": "This service is optional but recommended to provide a catalog of Metadata. It's includes an instance of GeoNetwork application.",
        "categories": ["OWS","API","services"],
        "platform": "linux",
        "logo": "http://terrabrasilis.dpi.inpe.br/wp-content/uploads/2019/03/geoespaciais1.png",
        "repository": {
            "url": "https://github.com/Terrabrasilis/docker-stacks",
            "stackfile": "applications/geonetwork.yaml"
        }
    },
    {
        "type": 2,
        "name": "dashboard-fires",
        "title": "Back-end and front-end for fire panel.",
        "description": "A back-end service to update data monthly and the Web App front-end dashboard.",
        "note": "This stack is optional. It includes an instance of the fire dashboard and another instance of the data update service.",
        "categories": ["application", "services"],
        "platform": "linux",
        "logo": "http://terrabrasilis.dpi.inpe.br/wp-content/uploads/2019/03/dashboard2.png",
        "repository": {
            "url": "https://github.com/terrabrasilis/docker-stacks",
            "stackfile": "dashboards/dashboard-fires.yaml"
        }
    },
    {
        "type": 2,
        "name": "dashboard-alerts",
        "title": "Alerts dashboard",
        "description": "A set of dashboards for DETER project with alerts of deforestation into Amazon and Cerrado.",
        "note": "This applications is optional and it's use only when the alerts database exists and is properly configured. It's includes four instances of panels each one with particular purpose.",
        "categories": ["application"],
        "platform": "linux",
        "logo": "http://terrabrasilis.dpi.inpe.br/wp-content/uploads/2019/03/dashboard2.png",
        "repository": {
            "url": "https://github.com/Terrabrasilis/docker-stacks",
            "stackfile": "dashboards/dashboard-alerts.yaml"
        }
    },
    {
        "type": 2,
        "name": "dashboard-alerts-homologation",
        "title": "Homologation alerts dashboard",
        "description": "(For homologation!) A set of dashboards for DETER project with alerts of deforestation into Amazon and Cerrado.",
        "note": "(For homologation!) This applications is optional and it's use only when the alerts database exists and is properly configured. It's includes four instances of panels each one with particular purpose.",
        "categories": ["application", "homologation"],
        "platform": "linux",
        "logo": "http://terrabrasilis.dpi.inpe.br/wp-content/uploads/2019/03/dashboard2.png",
        "repository": {
            "url": "https://github.com/Terrabrasilis/docker-stacks",
            "stackfile": "dashboards/dashboard-alerts-homologation.yaml"
        }
    },
    {
        "type": 2,
        "name": "dashboard-deforestation",
        "title": "Back-end of deforestation dashboard",
        "description": "The back-end services to dashboard for PRODES project with increments of deforestation for all biomes of Brazil.",
        "note": "This application is optional and it's use only when the deforestation database, called Dashboard-data-model, exists and is properly configured. It's includes instances of software components as Nginx, REDIS, REDIS-monitor and REDIS api.",
        "categories": ["API","services"],
        "platform": "linux",
        "logo": "https://raw.githubusercontent.com/terrabrasilis/docker-stacks/master/icons/backend.png",
        "repository": {
            "url": "https://github.com/Terrabrasilis/docker-stacks",
            "stackfile": "dashboards/dashboard-deforestation.yaml"
        }
    },
    {
        "type": 2,
        "name": "dashboard-deforestation-homologation",
        "title": "Back-end of deforestation dashboard for homologation",
        "description": "The back-end services to dashboard for PRODES project with increments of deforestation for all biomes of Brazil.",
        "note": "This stack is optional and it's use only when the deforestation database, called Dashboard-data-model-homologation, exists and is properly configured. It's includes instances of software components as Nginx, REDIS, REDIS-monitor and REDIS api.",
        "categories": ["API","services"],
        "platform": "linux",
        "logo": "https://raw.githubusercontent.com/terrabrasilis/docker-stacks/master/icons/backend.png",
        "repository": {
            "url": "https://github.com/Terrabrasilis/docker-stacks",
            "stackfile": "dashboards/dashboard-deforestation-homologation.yaml"
        }
    },
    {
        "type": 2,
        "name": "download_static_files",
        "title": "A simple service to provide download for static files",
        "description": "This stack is compounds by a Nginx as a file server read only.",
        "note": "This service is optional and it's use only when you need to provide a download service of static file directly from disc.",
        "categories": ["services", "nginx"],
        "platform": "linux",
        "logo": "https://raw.githubusercontent.com/terrabrasilis/docker-stacks/master/icons/backend.png",
        "repository": {
            "url": "https://github.com/Terrabrasilis/docker-stacks",
            "stackfile": "services/nginx-static-download.yaml"
        }
    },
    {
        "type": 2,
        "name": "prodes_download_controller",
        "title": "An App and a service to control the download for special files.",
        "description": "This stack is compounds by an app with the form to get client data and two services to store client data and send a download link by email.",
        "note": "This service is optional and it's use only when you need to provide a special download service used to control who and when one file is get.",
        "categories": ["services", "download", "application"],
        "platform": "linux",
        "logo": "https://raw.githubusercontent.com/terrabrasilis/docker-stacks/master/icons/backend.png",
        "repository": {
            "url": "https://github.com/Terrabrasilis/docker-stacks",
            "stackfile": "applications/download-files-controller.yaml"
        }
    },
    {
        "type": 2,
        "name": "deter_release_data",
        "title": "Stack of data service and authentication for release DETER data.",
        "description": "A set of services compounds by an API to validate a JWT token and delivery JSON data and a set of scripts to prepare the data to use for download and dashboard features.",
        "note": "This services are optional and it's use only when the deforestation alerts database, called DETER-B, exists and is properly configured. Another configurations are necessary like Secrets inside Portainer. See the Stack definition file to more specific details.",
        "categories": ["auto tasks", "services"],
        "platform": "linux",
        "logo": "https://raw.githubusercontent.com/terrabrasilis/docker-stacks/master/icons/backend.png",
        "repository": {
            "url": "https://github.com/Terrabrasilis/docker-stacks",
            "stackfile": "deter-sync/data-service-auth.yaml"
        }
    },
    {
        "type": 2,
        "name": "terrabrasilis-website",
        "title": "The entry point Website",
        "description": "The TerraBrasilis Website based in Wordpress. It's the entry point of all TerraBrasilis resources.",
        "note": "This stack are optional, but without this, no one responds by the root URL.",
        "categories": ["application"],
        "platform": "linux",
        "logo": "http://terrabrasilis.dpi.inpe.br/wp-content/uploads/2019/03/geoespaciais1.png",
        "repository": {
            "url": "https://github.com/Terrabrasilis/docker-stacks",
            "stackfile": "terrabrasilis-website/terrabrasilis-website.yaml"
        }
    },
    {
        "type": 2,
        "name": "webapps-homologation",
        "title": "The WebMap and Deforestation Dashboard for homologation",
        "description": "The TerraBrasilis WebMap is the main component of the Web GUIs for explore our maps using the OGC services. The dashboard is the main component Web GUI for explore the deforestation data analytics produced by PRODES.",
        "note": "This stack are optional and responds by the Map and Deforestation-dashboard URLs for homologation use.",
        "categories": ["application", "homologation"],
        "platform": "linux",
        "logo": "http://terrabrasilis.dpi.inpe.br/wp-content/uploads/2019/03/geoespaciais1.png",
        "repository": {
            "url": "https://github.com/Terrabrasilis/docker-stacks",
            "stackfile": "terrabrasilis-webapp/webapps-homologation.yaml"
        }
    },
    {
        "type": 2,
        "name": "webapps",
        "title": "The WebMap and deforestation-dashborad Apps for production",
        "description": "The TerraBrasilis WebMap is the main component of the Web GUIs for explore our maps using the OGC services. The dashboard is the main component Web GUI for explore the deforestation data analytics produced by PRODES.",
        "note": "This stack are optional and responds by the Map and Deforestation-dashboard URLs for production use.",
        "categories": ["application"],
        "platform": "linux",
        "logo": "http://terrabrasilis.dpi.inpe.br/wp-content/uploads/2019/03/geoespaciais1.png",
        "repository": {
            "url": "https://github.com/Terrabrasilis/docker-stacks",
            "stackfile": "terrabrasilis-webapp/webapps.yaml"
        }
    },
    {
        "type": 2,
        "name": "portainer",
        "title": "The Portainer App",
        "description": "The Portainer App allows to manage the Docker stacks, containers, images, volumes, networks and more for the Docker Swarm.",
        "note": "This stack are optional but is strongly recommended.",
        "categories": ["application","manage"],
        "platform": "linux",
        "logo": "http://terrabrasilis.dpi.inpe.br/wp-content/uploads/2019/03/geoespaciais1.png",
        "repository": {
            "url": "https://github.com/Terrabrasilis/docker-stacks",
            "stackfile": "applications/portainer.yaml"
        }
    },
    {
        "type": 2,
        "name": "monitor_panel",
        "title": "The Grafana monitor panel and dependencies like influxdb and agents.",
        "description": "The Monitor panel is an instance of grafana and its dependencies is compound by an agent per node and one influxdb to store the statistics from containers and services.",
        "note": "This stack are optional and used to monitoring services on docker swarm.",
        "categories": ["application","manage"],
        "platform": "linux",
        "logo": "http://terrabrasilis.dpi.inpe.br/wp-content/uploads/2019/03/geoespaciais1.png",
        "repository": {
            "url": "https://github.com/Terrabrasilis/docker-stacks",
            "stackfile": "applications/grafana.yaml"
        }
    },
    {
        "type": 2,
        "name": "health-check",
        "title": "The cluster health check service",
        "description": "A simple service to response to a request with the node hostname where it runs.",
        "note": "This stack are optional.",
        "categories": ["manage"],
        "platform": "linux",
        "logo": "http://terrabrasilis.dpi.inpe.br/wp-content/uploads/2019/03/geoespaciais1.png",
        "repository": {
            "url": "https://github.com/Terrabrasilis/docker-stacks",
            "stackfile": "services/cluster-health-check.yaml"
        }
    },
    {
        "type": 2,
        "name": "mysql",
        "title": "The MySQL SGDB and the WebClient PhpMyAdmin.",
        "description": "The PhpMyAdmin App allows to manage the databases into any internal instance for MySQL.",
        "note": "This stack are optional and is used for store and manage the databases of the WordPress such as TerraBrasilis Web site and another PHP web pages.",
        "categories": ["application","manage", "SGDB", "mysql"],
        "platform": "linux",
        "logo": "http://terrabrasilis.dpi.inpe.br/wp-content/uploads/2019/03/geoespaciais1.png",
        "repository": {
            "url": "https://github.com/Terrabrasilis/docker-stacks",
            "stackfile": "applications/mysql.yaml"
        }
    },
    {
        "type": 2,
        "name": "php-pages",
        "title": "The general pages with PHP and MySQL",
        "description": "Used to deploy pages made with PHP as survey and certificates.",
        "note": "This stack are optional and is used when we have any PHP web pages.",
        "categories": ["application"],
        "platform": "linux",
        "logo": "http://terrabrasilis.dpi.inpe.br/wp-content/uploads/2019/03/geoespaciais1.png",
        "repository": {
            "url": "https://github.com/Terrabrasilis/docker-stacks",
            "stackfile": "applications/php-pages.yaml"
        }
    },
    {
        "type": 2,
        "name": "timeseries-ocpu",
        "title": "The timeseries using ocpu",
        "description": "The timeseries app allows the integration between R package sits and TerraBrasilis webapp using openCPU.",
        "note": "This stack are optional, but without this, no timeseries will be extracted.",
        "categories": ["API","services"],
        "platform": "linux",
        "logo": "http://terrabrasilis.dpi.inpe.br/wp-content/uploads/2019/03/geoespaciais1.png",
        "repository": {
            "url": "https://github.com/Terrabrasilis/docker-stacks",
            "stackfile": "api/timeseries-ocpu.yaml"
        }
    },
    {
        "type": 2,
        "name": "wordpress-general",
        "title": "A stack to publish some websites based in wordpress.",
        "description": "Used to deploy sites based in wordpress project.",
        "note": "This stack are optional.",
        "categories": ["application"],
        "platform": "linux",
        "logo": "http://terrabrasilis.dpi.inpe.br/wp-content/uploads/2019/03/geoespaciais1.png",
        "repository": {
            "url": "https://github.com/Terrabrasilis/docker-stacks",
            "stackfile": "applications/wordpress.yaml"
        }
    },
    {
        "type": 2,
        "name": "terrabrasilis-oauth-api",
        "title": "Stack of user authentication and validation service.",
        "description": "A set of services compounds by an API to validate a JWT token, to provide an API to be integrated on any terrbrasilis app.",
        "categories": ["services"],
        "platform": "linux",
        "logo": "https://raw.githubusercontent.com/terrabrasilis/docker-stacks/master/icons/backend.png",
        "repository": {
            "url": "https://github.com/Terrabrasilis/docker-stacks",
            "stackfile": "services/oauth-api.yaml"
        }
    },
    {
        "type": 2,
        "name": "file-delivery-homologation",
        "title": "Stack of a file provider user validator (homologation)",
        "description": "A service to provider file according to the user permission, this services uses oauth-api to check user validation .",
        "categories": ["services"],
        "platform": "linux",
        "logo": "https://raw.githubusercontent.com/terrabrasilis/docker-stacks/master/icons/backend.png",
        "repository": {
            "url": "https://github.com/Terrabrasilis/docker-stacks",
            "stackfile": "services/file-delivery-homologation.yaml"
        }
    },
    {
        "type": 2,
        "name": "sos-base-stack",
        "title": "SOS Mata Atlântica stack",
        "description": "SOS Mata Atlântica stack with all instances of services and Apps.",
        "categories": ["API", "services", "application"],
        "platform": "linux",
        "logo": "http://terrabrasilis.dpi.inpe.br/wp-content/uploads/2019/03/geoespaciais1.png",
        "repository": {
            "url": "https://github.com/Terrabrasilis/docker-stacks",
            "stackfile": "sos/base-stack.yaml"
        }
    },
    {
        "type": 2,
        "name": "terrabrasilis-tools",
        "title": "Tools service stack",
        "description": "The service stack with tools for internal use. It is usually a standalone service.",
        "categories": ["tools", "services"],
        "platform": "linux",
        "logo": "https://raw.githubusercontent.com/terrabrasilis/docker-stacks/master/icons/backend.png",
        "repository": {
            "url": "https://github.com/Terrabrasilis/docker-stacks",
            "stackfile": "tools/terrabrasilis-tools.yaml"
        }
    },
    {
        "type": 2,
        "name": "ams",
        "title": "The complete AMS stack",
        "description": "Used to deploy the AMS Webapp and background task.",
        "note": "This stack is part of TerraBrasilis core.",
        "categories": ["application", "auto tasks"],
        "platform": "linux",
        "logo": "https://raw.githubusercontent.com/terrabrasilis/docker-stacks/master/icons/frontend.png",
        "repository": {
            "url": "https://github.com/Terrabrasilis/docker-stacks",
            "stackfile": "terrabrasilis-webapp/ams.yaml"
        }
    },
    {
        "type": 2,
        "name": "ams-homologation",
        "title": "The homologation AMS stack",
        "description": "Used to deploy the homologation AMS Webapp and background task.",
        "note": "This stack is optional.",
        "categories": ["application", "homologation", "auto tasks"],
        "platform": "linux",
        "logo": "https://raw.githubusercontent.com/terrabrasilis/docker-stacks/master/icons/frontend.png",
        "repository": {
            "url": "https://github.com/Terrabrasilis/docker-stacks",
            "stackfile": "terrabrasilis-webapp/ams-homologation.yaml"
        }
    }
]
