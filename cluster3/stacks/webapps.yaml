version: '3.4'
services:
  webmap:
    image: terrabrasilis/webmap:prod_v2.5.0
    hostname: webmap.production
    networks:
      - proxy
    ports:
      - "80"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    healthcheck:
      test: ["CMD-SHELL", "httpcode=`curl -s -o /dev/null --head -w \"%{http_code}\" -X GET \"http://localhost\"`; if [ ! $httpcode = \"200\" ]; then exit 1; fi"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s

  deforestation-dashboard:
    image: terrabrasilis/deforestation-dashboard:prod_v3.2.0
    hostname: deforestation.dashboard.production
    networks:
      - proxy
    ports:
      - "80"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    healthcheck:
      test: ["CMD-SHELL", "httpcode=`curl -s -o /dev/null --head -w \"%{http_code}\" -X GET \"http://localhost\"`; if [ ! $httpcode = \"200\" ]; then exit 1; fi"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s

  focuses-of-fires:
    image: terrabrasilis/focuses-of-fires-dashboard:v1.3.8
    networks:
      - proxy
    ports:
      - "80"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    healthcheck:
      test: ["CMD-SHELL", "httpcode=`curl -s -o /dev/null --head -w \"%{http_code}\" -X GET \"http://localhost\"`; if [ ! $httpcode = \"200\" ]; then exit 1; fi"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s

  cerrado-alert-daily:
    image: terrabrasilis/cerrado-alert-daily:v2.7.9
    networks:
      - proxy
    ports:
      - "80"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    healthcheck:
      test: ["CMD-SHELL", "httpcode=`curl -s -o /dev/null --head -w \"%{http_code}\" -X GET \"http://localhost\"`; if [ ! $httpcode = \"200\" ]; then exit 1; fi"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s

  cerrado-alert-aggregated:
    image: terrabrasilis/cerrado-alert-aggregated:v2.7.9
    networks:
      - proxy
    ports:
      - "80"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    healthcheck:
      test: ["CMD-SHELL", "httpcode=`curl -s -o /dev/null --head -w \"%{http_code}\" -X GET \"http://localhost\"`; if [ ! $httpcode = \"200\" ]; then exit 1; fi"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s

  amazon-alert-aggregated:
    image: terrabrasilis/amazon-alert-aggregated:v2.12.1
    networks:
      - proxy
    ports:
      - "80"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    healthcheck:
      test: ["CMD-SHELL", "httpcode=`curl -s -o /dev/null --head -w \"%{http_code}\" -X GET \"http://localhost\"`; if [ ! $httpcode = \"200\" ]; then exit 1; fi"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s

  amazon-alert-daily:
    image: terrabrasilis/amazon-alert-daily:v2.12.1
    networks:
      - proxy
    ports:
      - "80"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    healthcheck:
      test: ["CMD-SHELL", "httpcode=`curl -s -o /dev/null --head -w \"%{http_code}\" -X GET \"http://localhost\"`; if [ ! $httpcode = \"200\" ]; then exit 1; fi"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s

  app_survey:
    image: terrabrasilis/survey:v0.3
    ports:
      - "80"
    volumes:
      - /data/survey:/var/www/html
    depends_on:
      - db_mysql
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks: 
      - proxy
      - backend

  cerrado-nb-alert-daily:
    image: terrabrasilis/cerrado-alert-daily:v2.11.0
    networks:
      - proxy
    ports:
      - "80"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        
  cerrado-nb-alert-aggregated:
    image: terrabrasilis/cerrado-alert-aggregated:v2.11.0
    networks:
      - proxy
    ports:
      - "80"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

networks:
  proxy:
    external: true
  backend:
    external: true
